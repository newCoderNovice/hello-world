class Solution
{
    public boolean validateSudoku(char[][] board)
    {
        if(board==null || board.length !=9 || board[0].length !=9)
          return false;
          
        HashMap<Integer, Integer> rows[] = new HashMap[9];
        HashMap<Integer, Integer> cols[] = new HashMap[9];
        HashMap<Integer, Integer> subbox[] = new HashMap[9];
        
        for(int i=0; <9; i++)
        {
            rows[i]=new HashMap<Integer, Integer>();
            cols[i]=new HashMap<Integer, Integer>();
            subbox[i]=new HashMap<Integer, Integer>();
        }
        
        for(int i=0; i<board.length; i++)
        {
            for(int j=0; j<board[0].length; j++)
            {
                if(board[i][j]!='.')
                {
                    int val=(int)board[i][j];
                    int boxid=(i/3)*3+j/3;
                    
                    rows[i].put(val, rows[i].getOrDefault(val, 0)+1);
                    cols[j].put(val, cols[j].getOrDefault(val, 0)+1);
                    subbox[boxid].put(val, subbox[boxid].getOrDefault(val, 0)+1);
                    
                    if(rows[i].get(val)>1 || cols[j].get(val)>1 || subbox[boxid].get(val)>1)
                        return false;
                }                
            }
        }
        return true;
    }
}
