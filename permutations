class Solution
{
    public List<List<Integer>> permute(int[] nums)
    {
        List<List<Integer>> res= new ArrayList<ArrayList<Integer>>();
        
        dfs(res, nums, 0);
        return res;
    }
    
    private void dfs(List<List<Integer> res, int[] nums, int idx)
    {
        if(idx==nums.length)
        {
            List<Integer> temp = new ArrayList<Inetger>();
            for(int num: nums)
                temp.add(num);
            res.add(temp);
            return;
        }
        
        for(int i=idx; i< nums.length; i++)
        {
            swap(nums, idx, i);
            permute(res, nums, idx);
            swap(nums, idx, i);
        }
    }
    
    private void swap(int[] nums, int i, int j)
    {
        in tmp=nums[i];
        nums[i]=nums[j];
        nums[j]=tmp;
    }
  
}
